set nocompatible
source $VIMRUNTIME/vimrc_example.vim
source $VIMRUNTIME/mswin.vim
behave mswin

set diffexpr=MyDiff()
function MyDiff()
  let opt = '-a --binary '
  if &diffopt =~ 'icase' | let opt = opt . '-i ' | endif
  if &diffopt =~ 'iwhite' | let opt = opt . '-b ' | endif
  let arg1 = v:fname_in
  if arg1 =~ ' ' | let arg1 = '"' . arg1 . '"' | endif
  let arg2 = v:fname_new
  if arg2 =~ ' ' | let arg2 = '"' . arg2 . '"' | endif
  let arg3 = v:fname_out
  if arg3 =~ ' ' | let arg3 = '"' . arg3 . '"' | endif
  let eq = ''
  if $VIMRUNTIME =~ ' '
    if &sh =~ '\<cmd'
      let cmd = '""' . $VIMRUNTIME . '\diff"'
      let eq = '"'
    else
      let cmd = substitute($VIMRUNTIME, ' ', '" ', '') . '\diff"'
    endif
  else
    let cmd = $VIMRUNTIME . '\diff'
  endif
  silent execute '!' . cmd . ' ' . opt . arg1 . ' ' . arg2 . ' > ' . arg3 . eq
endfunction

set nocompatible                " choose no compatibility with legacy vi
syntax enable
set encoding=utf-8
set showcmd                     " display incomplete commands
filetype plugin indent on       " load file type plugins + indentation

"" Whitespace
set nowrap                      " don't wrap lines
set shiftwidth=4 softtabstop=4      " a tab is two spaces (or set this to 4)
set expandtab                   " use spaces, not tabs (optional)
set backspace=indent,eol,start  " backspace through everything in insert mode

"" Searching
set hlsearch                    " highlight matches
set incsearch                   " incremental searching
set ignorecase                  " searches are case insensitive...
set smartcase                   " ... unless they contain at least one capital letter

set colorcolumn=80             " have a line showing coloumn boundary


"""""""" Nirvana starts on Aug 14
"show line number
set number
:map <F8> :let @@=expand('<cword>')<CR>
"Map for vimgrep just keep it over the word then press coma to search in
"vimgrep "
nmap , :vimgrep /\<<C-R>=expand("<cword>")<CR>\>/ ./**/*.[ch]

set tabstop=4 shiftwidth=4 expandtab

" Remove backup ~ files
set nobackup

" Igonre case while searching
set ic

"FONT
set guifont=Consolas:h10
"set guifont=Consolas:h11

"Ctags
set tags=./tags,tags;$HOME

"colorscheme - Solarized
" syntax enable "already enabled
set background=light "light or dark
"disable the solarised menu
let g:solarized_menu=0
"solarised color scheme. put the scheme in the colors folder
colorscheme solarized


" Removes trailing spaces in files
"autocmd BufWritePre *.py normal m`:%s/\s\+$//e
``
"autocmd BufWritePre *.txt normal m`:%s/\s\+$//e
``
"autocmd BufWritePre *.c normal m`:%s/\s\+$//e
``
"autocmd BufWritePre *.h normal m`:%s/\s\+$//e
``

"F11 map
"1.	convert all tab to 4 spaces and 
"2.	remove trailing spaces
nmap <F11> :%s/\t/    /g <bar> :%s/\s\+$//

"F12 map
"1.	convert all tab to 4 spaces and 
"2.	remove trailing spaces
"3.	save and exit
nmap <F12> :%s/\t/    /g <bar> :%s/\s\+$//<bar> :wq<CR>

"nmap <F12> :source c:\Program Files (x86)\Vim\_vimrc_vmp

"Pathogen plugin manager enable
execute pathogen#infect()

"NERDTree
nmap <F8> :NERDTree<CR>

"TagbarToggle
nmap <F9> :TagbarToggle<CR>
